@page "/logout"
@using WebTestingAiAgent.Web.Services
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IUserContextService UserContext

<PageTitle>Logout - Bug Tracking System</PageTitle>

<div class="container-fluid vh-100">
    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h3 class="mb-0">
                        <i class="bi bi-box-arrow-right me-2"></i>
                        Logging Out
                    </h3>
                </div>
                <div class="card-body p-4 text-center">
                    @if (isLoggingOut)
                    {
                        <div class="mb-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Logging out...</span>
                            </div>
                        </div>
                        <p class="text-muted">Please wait while we log you out...</p>
                    }
                    else
                    {
                        <div class="mb-3">
                            <i class="bi bi-check-circle text-success" style="font-size: 3rem;"></i>
                        </div>
                        <h5>You have been successfully logged out</h5>
                        <p class="text-muted">Thank you for using Bug Tracking System</p>
                        <a href="/login" class="btn btn-primary">
                            <i class="bi bi-box-arrow-in-right me-2"></i>Login Again
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    .card {
        border-radius: 1rem;
        backdrop-filter: blur(10px);
    }
    
    .card-header {
        border-radius: 1rem 1rem 0 0 !important;
    }
</style>

@code {
    private bool isLoggingOut = true;

    protected override async Task OnInitializedAsync()
    {
        await PerformLogout();
    }

    private async Task PerformLogout()
    {
        try
        {
            // Clear localStorage
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "isLoggedIn");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "username");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userId");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userRole");
            
            // Clear user context
            await UserContext.SetCurrentUserAsync("");
            
            // Wait a moment for visual feedback
            await Task.Delay(2000);
            
            isLoggingOut = false;
            StateHasChanged();
        }
        catch (Exception)
        {
            // Even if there's an error, still mark as logged out
            isLoggingOut = false;
            StateHasChanged();
        }
    }
}